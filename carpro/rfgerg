@app.route("/login_validation", methods=['GET', 'POST'])
def login_validation():
    if (request.method == 'POST'):
        session.pop('email', None)
        email = request.form.get('email')
        password = request.form.get('password')
        cursor.execute("""SELECT * FROM `register` WHERE `email` LIKE '{}'"""
                       .format(email))
        register = cursor.fetchall()
        if register:
            if len(register) > 0:
                print(register[0][1])
                session['sno'] = register[0][0]
                session['username'] = register[0][1]
                session['email'] = register[0][2]
                entry = Login(email=email, password=password, date=datetime.now())
                db.session.add(entry)
                db.session.commit()
                return redirect(url_for('userlogin'))
                # return render_template('userlogin.html', name=session['email'])
            else:
                flash("email or password is incorrect")
                return redirect(url_for('login'))

    return render_template('login.html')


    @app.route('/editBookingDataFetch/<string:email>', methods=['GET', 'POST'])
def refresh(email):
    checkout = []
    current_user = session['email']
    cursor.execute("""SELECT * FROM `checkout` WHERE `Email` LIKE '{}' """
                   .format(current_user))
    checkout_data = cursor.fetchall()

    for i in checkout_data:
        checkout.append(i)
    current = session['email']
    cursor.execute("""SELECT * FROM `checkout` WHERE `Email` LIKE '{}' WHERE email = current"""
                   .format(email))
    email = current
    refreshfetch = cursor.fetchall()
    return render_template('booking.html', params=params, checkoutdata=checkout, logged_in_user=session['username'])